/*******************************************************************************
* Copyright (c) 2015 lostinsoftware. All rights reserved.
*
* This library is free software; you can redistribute it and/or modify it under
* the terms of the GNU Lesser General Public License as published by the Free
* Software Foundation; either version 2.1 of the License, or (at your option)
* any later version.
*
* This library is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
* details.
*
* Contributors:
*          lostinsoftware - initial implementation and ongoing maintenance
*          
*******************************************************************************/
package com.lostinsoftware.classicmodels.model;

// Generated 12-ago-2015 22:07:35 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Payments generated by hbm2java
 */
@Entity
@Table(name = "payments", catalog = "classicmodels")
public class Payments implements java.io.Serializable {

  private PaymentsId id;
  private Customers customers;
  private Date paymentDate;
  private double amount;

  public Payments() {
  }

  public Payments(PaymentsId id, Customers customers, Date paymentDate,
      double amount) {
    this.id = id;
    this.customers = customers;
    this.paymentDate = paymentDate;
    this.amount = amount;
  }

  @EmbeddedId
  @AttributeOverrides({
      @AttributeOverride(name = "customerNumber", column = @Column(name = "customerNumber", nullable = false)),
      @AttributeOverride(name = "checkNumber", column = @Column(name = "checkNumber", nullable = false, length = 50)) })
  public PaymentsId getId() {
    return this.id;
  }

  public void setId(PaymentsId id) {
    this.id = id;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "customerNumber", nullable = false, insertable = false, updatable = false)
  public Customers getCustomers() {
    return this.customers;
  }

  public void setCustomers(Customers customers) {
    this.customers = customers;
  }

  @Temporal(TemporalType.DATE)
  @Column(name = "paymentDate", nullable = false, length = 10)
  public Date getPaymentDate() {
    return this.paymentDate;
  }

  public void setPaymentDate(Date paymentDate) {
    this.paymentDate = paymentDate;
  }

  @Column(name = "amount", nullable = false, precision = 22, scale = 0)
  public double getAmount() {
    return this.amount;
  }

  public void setAmount(double amount) {
    this.amount = amount;
  }

}
